<?php

$map["Graph Theory"]="Graph Theory";
$map["Graph Theory"]="Graph Theory";
$map["graphs"]="Graph Theory";
$map["2-SAT"]="2-SAT";
$map["2-sat"]="2-SAT";
$map["Articulation/Bridge/Biconnected Component"]="Articulation/Bridge/Biconnected Component";
$map["Cycles/Topological Sorting/Strongly Connected Component"]="Cycles/Topological Sorting/Strongly Connected Component";
$map["shortest paths"]="Shortest Path";
$map["Bellman Ford"]="Bellman Ford";
$map["Dijkstra/Floyd Warshall"]="Dijkstra/Floyd Warshall";
$map["Euler Trail/Circuit"]="Euler Trail/Circuit";
$map["Heavy-Light Decomposition"]="Heavy-Light Decomposition";
$map["Minimum Spanning Tree"]="Minimum Spanning Tree";
$map["Stable Marriage Problem"]="Stable Marriage Problem";
$map["trees"]="Trees";
$map["Directed Minimum Spanning Tree"]="Directed Minimum Spanning Tree";
$map["Flow/Matching"]="Flow/Matching";
$map["graph matchings"]="Graph Matching";
$map["Bipartite Matching"]="Bipartite Matching";
$map["Hopcroft–Karp Bipartite Matching"]="Hopcroft–Karp Bipartite Matching";
$map["Weighted Bipartite Matching/Hungarian Algorithm"]="Weighted Bipartite Matching/Hungarian Algorithm";
$map["flows"]="Flow";
$map["Max Flow/Min Cut"]="Max Flow/Min Cut";
$map["Min Cost Max Flow"]="Min Cost Max Flow";
$map["Recursion/Branch and Bound"]="DFS-like";
$map["dfs and similar"]="DFS-like";
$map["Backtracking with Pruning/Branch and Bound"]="Backtracking with Pruning/Branch and Bound";
$map["Basic Recursion"]="Basic Recursion";
$map["IDA* Search"]="IDA* Search";
$map["Parsing/Grammar"]="Parsing/Grammar";
$map["expression parsing"]="Parsing/Grammar";
$map["Breadth First Search/Depth First Search"]="Breadth First Search/Depth First Search";
$map["Advanced Search Techniques"]="Advanced Search Techniques";
$map["Binary Search/Bisection"]="Binary Search/Bisection";
$map["binary search"]="Binary Search/Bisection";
$map["Ternary Search"]="Ternary Search";
$map["ternary search"]="Ternary Search";
$map["Geometry"]="Geometry";
$map["Geometry"]="Geometry";
$map["geometry"]="Geometry";
$map["Basic Geometry"]="Basic Geometry";
$map["Computational Geometry"]="Computational Geometry";
$map["Convex Hull"]="Convex Hull";
$map["Pick`s theorem"]="Pick's Theorem";
$map["Game Theory"]="Game Theory";
$map["Game"]="Game Theory";
$map["games"]="Game Theory";
$map["Green Hackenbush/Colon Principle/Fusion Principle"]="Green Hackenbush/Colon Principle/Fusion Principle";
$map["Nim"]="Nim";
$map["Sprague-Grundy Number"]="Sprague-Grundy Number";
$map["Matrix"]="Matrix";
$map["matrices"]="Matrix";
$map["Gaussian Elimination"]="Gaussian Elimination";
$map["Matrix Exponentiation"]="Matrix Exponentiation";
$map["Data Structures"]="Data Structures";
$map["Data Structures"]="Data Structures";
$map["data structures"]="Data Structures";
$map["Basic Data Structures"]="Basic Data Structures";
$map["Binary Indexed Tree"]="Binary Indexed Tree";
$map["Binary Search Tree"]="Binary Search Tree";
$map["Hashing"]="Hashing";
$map["hashing"]="Hashing";
$map["Orthogonal Range Search"]="Orthogonal Range Search";
$map["Range Minimum Query/Lowest Common Ancestor"]="Range Minimum Query/Lowest Common Ancestor";
$map["Segment Tree/Interval Tree"]="Segment Tree/Interval Tree";
$map["Trie Tree"]="Trie Tree";
$map["sortings"]="Sorting";
$map["dsu"]="Disjoint Set";
$map["String"]="String";
$map["String Algorithms"]="String";
$map["strings"]="String";
$map["Aho Corasick"]="Aho Corasick";
$map["Knuth-Morris-Pratt"]="Knuth-Morris-Pratt";
$map["Suffix Array/Suffix Tree"]="Suffix Array/Suffix Tree";
$map["string suffix structures"]="Suffix Array/Suffix Tree";
$map["Math"]="Math";
$map["math"]="Math";
$map["Basic Math"]="Basic Math";
$map["Big Integer Arithmetic"]="Big Integer Arithmetic";
$map["Number Theory"]="Number Theory";
$map["Number Theory"]="Number Theory";
$map["number theory"]="Number Theory";
$map["Chinese Remainder Theorem"]="Chinese Remainder Theorem";
$map["Extended Euclid"]="Extended Euclid";
$map["Inclusion/Exclusion"]="Inclusion/Exclusion";
$map["Modular Arithmetic"]="Modular Arithmetic";
$map["combinatorics"]="Combinatorics";
$map["Group Theory/Burnside`s lemma"]="Group Theory/Burnside's lemma";
$map["Counting"]="Counting";
$map["Probability/Expected Value"]="Probability/Expected Value";
$map["probabilities"]="Probability/Expected Value";
$map["Others"]="Others";
$map["Tricky"]="Tricky";
$map["Hardest"]="Hardest";
$map["Unusual"]="Unusual";
$map["brute force"]="Brute Force";
$map["implementation"]="Implementation";
$map["constructive algorithms"]="Constructive Algorithms";
$map["two pointers"]="Two Pointer";
$map["bitmasks"]="Bitmask";
$map["Beginners Problems"]="Beginner";
$map["Beginners"]="Beginner";
$map["Discrete Logarithm/Shank`s Baby-step Giant-step Algorithm"]="Discrete Logarithm/Shank's Baby-step Giant-step Algorithm";
$map["Dynamic Programming"]="Dynamic Programming";
$map["Dynamic Programming"]="Dynamic Programming";
$map["dp"]="Dynamic Programming";
$map["Greedy"]="Greedy";
$map["greedy"]="Greedy";
$map["Divide and Conquer"]="Divide and Conquer";
$map["divide and conquer"]="Divide and Conquer";

$map["BigNums"]="Big Integer Arithmetic";
$map["Computational Geometry"]="Geometry";
$map["Data Structure - Dancing Links"]="Advanced Search Techniques";
$map["Data Structure - LCA"]="Range Minimum Query/Lowest Common Ancestor";
$map["Data Structure - Suffix Array（Suffix Tree）"]="Suffix Array/Suffix Tree";
$map["Discretize"]="Discrete Logarithm/Shank`s Baby-step Giant-step Algorithm";
$map["Expectation"]="Probability/Expected Value";
$map["Graph Theory -  Union-Find Sets"]="Disjoint Set";
$map["Graph Theory - Match"]="Graph Matching";
$map["Graph Theory - Network Flow"]="Flow";
$map["Graph Theory - Shortest Path"]="Shortest Path";
$map["Hash"]="Hashing";
$map["KMP"]="Knuth-Morris-Pratt";
$map["Math Theory"]="Number Theory";
$map["Non-Mainstream"]="Unusual";
$map["Search"]="DFS-like";
$map["Sorting"]="Sorting";
$map["Combinatorics"]="Combinatorics";
$map["Data Structure -  Segment Tree"]="Segment Tree/Interval Tree";
$map["Data Structure - Keyword Tree"]="Trie Tree";
$map["Data Structure - Others"]="Data Structures";
$map["Deduce"]="Divide and Conquer";
$map["Dynamic Programming"]="Dynamic Programming";
$map["Game Theory"]="Game Theory";
$map["Graph Theory - Assignment Problem"]="Graph Theory";
$map["Graph Theory - Minimum Spanning Tree"]="Minimum Spanning Tree";
$map["Graph Theory - Others"]="Graph Theory";
$map["Greedy"]="Greedy";
$map["Introduction"]="Beginner";
$map["Math"]="Math";
$map["Matrix"]="Matrix";
$map["Oh My God（who can solve these problems?）"]="Hardest";
$map["Simulation"]="Implementation";
$map["Water~~~"]="Beginner";





$key["Graph Theory"]=1;
$key["2-SAT"]=2;
$key["Articulation/Bridge/Biconnected Component"]=3;
$key["Cycles/Topological Sorting/Strongly Connected Component"]=4;
$key["Shortest Path"]=5;
$key["Bellman Ford"]=6;
$key["Dijkstra/Floyd Warshall"]=7;
$key["Euler Trail/Circuit"]=8;
$key["Heavy-Light Decomposition"]=9;
$key["Minimum Spanning Tree"]=10;
$key["Stable Marriage Problem"]=11;
$key["Trees"]=12;
$key["Directed Minimum Spanning Tree"]=13;
$key["Flow/Matching"]=14;
$key["Graph Matching"]=15;
$key["Bipartite Matching"]=16;
$key["Hopcroft–Karp Bipartite Matching"]=17;
$key["Weighted Bipartite Matching/Hungarian Algorithm"]=18;
$key["Flow"]=19;
$key["Max Flow/Min Cut"]=20;
$key["Min Cost Max Flow"]=21;
$key["DFS-like"]=22;
$key["Backtracking with Pruning/Branch and Bound"]=23;
$key["Basic Recursion"]=24;
$key["IDA* Search"]=25;
$key["Parsing/Grammar"]=26;
$key["Breadth First Search/Depth First Search"]=27;
$key["Advanced Search Techniques"]=28;
$key["Binary Search/Bisection"]=29;
$key["Ternary Search"]=30;
$key["Geometry"]=31;
$key["Basic Geometry"]=32;
$key["Computational Geometry"]=33;
$key["Convex Hull"]=34;
$key["Pick's Theorem"]=35;
$key["Game Theory"]=36;
$key["Green Hackenbush/Colon Principle/Fusion Principle"]=37;
$key["Nim"]=38;
$key["Sprague-Grundy Number"]=39;
$key["Matrix"]=40;
$key["Gaussian Elimination"]=41;
$key["Matrix Exponentiation"]=42;
$key["Data Structures"]=43;
$key["Basic Data Structures"]=44;
$key["Binary Indexed Tree"]=45;
$key["Binary Search Tree"]=46;
$key["Hashing"]=47;
$key["Orthogonal Range Search"]=48;
$key["Range Minimum Query/Lowest Common Ancestor"]=49;
$key["Segment Tree/Interval Tree"]=50;
$key["Trie Tree"]=51;
$key["Sorting"]=52;
$key["Disjoint Set"]=53;
$key["String"]=54;
$key["Aho Corasick"]=55;
$key["Knuth-Morris-Pratt"]=56;
$key["Suffix Array/Suffix Tree"]=57;
$key["Math"]=58;
$key["Basic Math"]=59;
$key["Big Integer Arithmetic"]=60;
$key["Number Theory"]=61;
$key["Chinese Remainder Theorem"]=62;
$key["Extended Euclid"]=63;
$key["Inclusion/Exclusion"]=64;
$key["Modular Arithmetic"]=65;
$key["Combinatorics"]=66;
$key["Group Theory/Burnside's lemma"]=67;
$key["Counting"]=68;
$key["Probability/Expected Value"]=69;
$key["Others"]=70;
$key["Tricky"]=71;
$key["Hardest"]=72;
$key["Unusual"]=73;
$key["Brute Force"]=74;
$key["Implementation"]=75;
$key["Constructive Algorithms"]=76;
$key["Two Pointer"]=77;
$key["Bitmask"]=78;
$key["Beginner"]=79;
$key["Discrete Logarithm/Shank's Baby-step Giant-step Algorithm"]=80;
$key["Dynamic Programming"]=81;
$key["Greedy"]=82;
$key["Divide and Conquer"]=83;


$fa["Graph Theory"]=$fa[1]=-1;
$fa["2-SAT"]=$fa[2]=1;
$fa["Articulation/Bridge/Biconnected Component"]=$fa[3]=1;
$fa["Cycles/Topological Sorting/Strongly Connected Component"]=$fa[4]=1;
$fa["Shortest Path"]=$fa[5]=1;
$fa["Bellman Ford"]=$fa[6]=5;
$fa["Dijkstra/Floyd Warshall"]=$fa[7]=5;
$fa["Euler Trail/Circuit"]=$fa[8]=1;
$fa["Heavy-Light Decomposition"]=$fa[9]=1;
$fa["Minimum Spanning Tree"]=$fa[10]=1;
$fa["Stable Marriage Problem"]=$fa[11]=1;
$fa["Trees"]=$fa[12]=1;
$fa["Directed Minimum Spanning Tree"]=$fa[13]=1;
$fa["Flow/Matching"]=$fa[14]=1;
$fa["Graph Matching"]=$fa[15]=14;
$fa["Bipartite Matching"]=$fa[16]=15;
$fa["Hopcroft–Karp Bipartite Matching"]=$fa[17]=15;
$fa["Weighted Bipartite Matching/Hungarian Algorithm"]=$fa[18]=15;
$fa["Flow"]=$fa[19]=14;
$fa["Max Flow/Min Cut"]=$fa[20]=19;
$fa["Min Cost Max Flow"]=$fa[21]=19;
$fa["DFS-like"]=$fa[22]=-1;
$fa["Backtracking with Pruning/Branch and Bound"]=$fa[23]=22;
$fa["Basic Recursion"]=$fa[24]=22;
$fa["IDA* Search"]=$fa[25]=22;
$fa["Parsing/Grammar"]=$fa[26]=22;
$fa["Breadth First Search/Depth First Search"]=$fa[27]=22;
$fa["Advanced Search Techniques"]=$fa[28]=22;
$fa["Binary Search/Bisection"]=$fa[29]=28;
$fa["Ternary Search"]=$fa[30]=28;
$fa["Geometry"]=$fa[31]=-1;
$fa["Basic Geometry"]=$fa[32]=31;
$fa["Computational Geometry"]=$fa[33]=31;
$fa["Convex Hull"]=$fa[34]=31;
$fa["Pick's Theorem"]=$fa[35]=31;
$fa["Game Theory"]=$fa[36]=-1;
$fa["Green Hackenbush/Colon Principle/Fusion Principle"]=$fa[37]=36;
$fa["Nim"]=$fa[38]=36;
$fa["Sprague-Grundy Number"]=$fa[39]=36;
$fa["Matrix"]=$fa[40]=-1;
$fa["Gaussian Elimination"]=$fa[41]=40;
$fa["Matrix Exponentiation"]=$fa[42]=40;
$fa["Data Structures"]=$fa[43]=-1;
$fa["Basic Data Structures"]=$fa[44]=43;
$fa["Binary Indexed Tree"]=$fa[45]=43;
$fa["Binary Search Tree"]=$fa[46]=43;
$fa["Hashing"]=$fa[47]=43;
$fa["Orthogonal Range Search"]=$fa[48]=43;
$fa["Range Minimum Query/Lowest Common Ancestor"]=$fa[49]=43;
$fa["Segment Tree/Interval Tree"]=$fa[50]=43;
$fa["Trie Tree"]=$fa[51]=43;
$fa["Sorting"]=$fa[52]=43;
$fa["Disjoint Set"]=$fa[53]=43;
$fa["String"]=$fa[54]=-1;
$fa["Aho Corasick"]=$fa[55]=54;
$fa["Knuth-Morris-Pratt"]=$fa[56]=54;
$fa["Suffix Array/Suffix Tree"]=$fa[57]=54;
$fa["Math"]=$fa[58]=-1;
$fa["Basic Math"]=$fa[59]=58;
$fa["Big Integer Arithmetic"]=$fa[60]=58;
$fa["Number Theory"]=$fa[61]=58;
$fa["Chinese Remainder Theorem"]=$fa[62]=61;
$fa["Extended Euclid"]=$fa[63]=61;
$fa["Inclusion/Exclusion"]=$fa[64]=61;
$fa["Modular Arithmetic"]=$fa[65]=61;
$fa["Combinatorics"]=$fa[66]=58;
$fa["Group Theory/Burnside's lemma"]=$fa[67]=66;
$fa["Counting"]=$fa[68]=66;
$fa["Probability/Expected Value"]=$fa[69]=58;
$fa["Others"]=$fa[70]=-1;
$fa["Tricky"]=$fa[71]=70;
$fa["Hardest"]=$fa[72]=70;
$fa["Unusual"]=$fa[73]=70;
$fa["Brute Force"]=$fa[74]=70;
$fa["Implementation"]=$fa[75]=70;
$fa["Constructive Algorithms"]=$fa[76]=70;
$fa["Two Pointer"]=$fa[77]=70;
$fa["Bitmask"]=$fa[78]=70;
$fa["Beginner"]=$fa[79]=70;
$fa["Discrete Logarithm/Shank's Baby-step Giant-step Algorithm"]=$fa[80]=70;
$fa["Dynamic Programming"]=$fa[81]=-1;
$fa["Greedy"]=$fa[82]=70;
$fa["Divide and Conquer"]=$fa[83]=70;


?>
